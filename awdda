local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local MAX_UNDERGROUND_OFFSET = 10
local MIN_UNDERGROUND_OFFSET = 0
local TELEPORT_NEAR_TREE_OFFSET = 25
local HORIZONTAL_DISTANCE_THRESHOLD = 10000
local SELL_WORLD_ID = 3475397644
local FARM_WORLD_ID = 125804922932357
local farmStartTime = tick()
local lastSafePosition = Vector3.new(0, 100, 0)

-- üñ•Ô∏è Toggle 3D Rendering
local renderingEnabled = true

local function setRenderingEnabled(enabled)
    renderingEnabled = enabled
    game:GetService("RunService"):Set3dRenderingEnabled(enabled)
    if enabled then
        print("üé® 3D Rendering: ENABLED")
    else
        print("üö´ 3D Rendering: DISABLED (Performance Mode)")
    end
end

-- ‡πÄ‡∏õ‡∏¥‡∏î Rendering ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
setRenderingEnabled(true)

pcall(function()
    local mobRemote = game:GetService("ReplicatedStorage"):FindFirstChild("Remotes")
    if mobRemote then
        local target = mobRemote:FindFirstChild("MobDamageRemote")
        if target then
            target:Destroy()
            print("")
        end
    end
end)

-- ‚úÖ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ FARM_WORLD_ID ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
task.spawn(function()
    task.wait(2)
    local remoteTeleport = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("WorldTeleportRemote")

    if game.PlaceId ~= FARM_WORLD_ID then
        print("üõ´ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏•‡∏Å‡∏ü‡∏≤‡∏£‡πå‡∏°...")
        local args = { FARM_WORLD_ID, {} }
        remoteTeleport:InvokeServer(unpack(args))
    else
        print("‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÅ‡∏•‡πâ‡∏ß")
    end
end)

local watchedItems = {
   "EdamameFoodModel","KajiFruitFoodModel","MistSudachiFoodModel"
}

local targetNames = {
   "AppleFoodModel", "LemonFoodModel", "CornFoodModel", "CarrotFoodModel", "PearFoodModel",
    "StrawberryFoodModel", "PeachFoodModel", "PotatoFoodModel", "BroccoliFoodModel", "CherryFoodModel",
    "BuleberryFoodModel", "MushroomFoodModel", "BananaFoodModel", "AlmondFoodModel", "OnionFoodModel",
    "KelpFoodModel", "GrapesFoodModel", "WatermelonFoodModel", "PricklyPearFoodModel", "ChiliFoodModel",
    "GlowingMushroomFoodModel", "PineappleFoodModel", "CottonCandyFoodModel", "JuniperBerryFoodModel",
    "LimeFoodModel", "DragonfruitFoodModel", "AvacadoFoodModel", "CacaoBeanFoodModel", "CoconutFoodModel","EdamameFoodModel","KajiFruitFoodModel","MistSudachiFoodModel"
}

local isFarming = true -- üü¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

-- üó∫Ô∏è ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏´‡πâ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ
local checkPositions = {
    Vector3.new(-266, 467, -394),
    Vector3.new(1757, 783, 672),
    Vector3.new(1420, 319, -1409),
    Vector3.new(1922, 620, -2566),
    Vector3.new(2226, 585, -4128),
    Vector3.new(330, 901, -4304),
    Vector3.new(-1433, 779, -4717),
    Vector3.new(-3031, 780, -4211),
    Vector3.new(-2643, 547, -2250),
    Vector3.new(-857, 401, -2132),
    Vector3.new(-828, 688, -3444),
	Vector3.new(-1819, 405, 170),
	Vector3.new(-1523, 962, 1150)
}

local currentCheckIndex = 1

local function createCombinedUI()
	local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
	screenGui.Name = "NEXON_UI"
	screenGui.ResetOnSpawn = false

	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î layout
	local ViewportSize = workspace.CurrentCamera.ViewportSize
	local isMobile = ViewportSize.X < 800 or ViewportSize.Y < 600

	-- Main Container (responsive)
	local mainFrame = Instance.new("Frame", screenGui)
	mainFrame.BackgroundColor3 = Color3.fromRGB(10, 15, 25)
	mainFrame.BackgroundTransparency = 0.05
	mainFrame.Size = UDim2.new(1, 0, 1, 0)
	mainFrame.Position = UDim2.new(0, 0, 0, 0)
	mainFrame.BorderSizePixel = 0
	mainFrame.Name = "MainPanel"

	-- ‡πÉ‡∏ä‡πâ UIScale ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
	local uiScale = Instance.new("UIScale", mainFrame)
	if isMobile then
		uiScale.Scale = math.min(ViewportSize.X / 800, ViewportSize.Y / 600)
	else
		uiScale.Scale = 1
	end

	-- Title Bar (responsive height)
	local titleBar = Instance.new("Frame", mainFrame)
	titleBar.BackgroundColor3 = Color3.fromRGB(30, 45, 65)
	titleBar.Size = UDim2.new(1, 0, 0.12, 0) -- ‡πÉ‡∏ä‡πâ scale ‡πÅ‡∏ó‡∏ô pixel
	titleBar.Position = UDim2.new(0, 0, 0, 0)
	titleBar.BorderSizePixel = 0

	local titleCorner = Instance.new("UICorner")
	titleCorner.CornerRadius = UDim.new(0.02, 0) -- responsive corner
	titleCorner.Parent = titleBar

	local titleStroke = Instance.new("UIStroke")
	titleStroke.Color = Color3.fromRGB(0, 255, 255)
	titleStroke.Thickness = math.max(2, ViewportSize.X * 0.003)
	titleStroke.Parent = titleBar

	-- Title Text (responsive text)
	local title = Instance.new("TextLabel", titleBar)
	title.Position = UDim2.new(0.05, 0, 0, 0)
	title.Size = UDim2.new(0.7, 0, 1, 0)
	title.BackgroundTransparency = 1
	title.Font = Enum.Font.Gotham
	title.Text = "NEXON SCRIPT AFK COINS"
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.TextScaled = true
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.TextStrokeTransparency = 0.7
	title.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

	-- Text size constraints
	local titleTextSize = Instance.new("UITextSizeConstraint", title)
	titleTextSize.MaxTextSize = isMobile and 28 or 55
	titleTextSize.MinTextSize = 16

	-- Coins Display (responsive)
	local coinsFrame = Instance.new("Frame", mainFrame)
	coinsFrame.Position = UDim2.new(0.02, 0, 0.14, 0)
	coinsFrame.Size = UDim2.new(0.96, 0, 0.15, 0) -- responsive height
	coinsFrame.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
	coinsFrame.BorderSizePixel = 0

	local coinsCorner = Instance.new("UICorner")
	coinsCorner.CornerRadius = UDim.new(0.02, 0)
	coinsCorner.Parent = coinsFrame

	local coinsStroke = Instance.new("UIStroke")
	coinsStroke.Color = Color3.fromRGB(255, 140, 0)
	coinsStroke.Thickness = math.max(3, ViewportSize.X * 0.004)
	coinsStroke.Parent = coinsFrame

	local coinsIcon = Instance.new("TextLabel", coinsFrame)
	coinsIcon.Position = UDim2.new(0.02, 0, 0, 0)
	coinsIcon.Size = UDim2.new(0.15, 0, 1, 0)
	coinsIcon.BackgroundTransparency = 1
	coinsIcon.Font = Enum.Font.GothamBlack
	coinsIcon.Text = "üí∞"
	coinsIcon.TextColor3 = Color3.fromRGB(0, 0, 0)
	coinsIcon.TextScaled = true
	coinsIcon.TextYAlignment = Enum.TextYAlignment.Center

	local coinsIconSize = Instance.new("UITextSizeConstraint", coinsIcon)
	coinsIconSize.MaxTextSize = isMobile and 30 or 60
	coinsIconSize.MinTextSize = 16

	local coinsLabel = Instance.new("TextLabel", coinsFrame)
	coinsLabel.Position = UDim2.new(0.17, 0, 0, 0)
	coinsLabel.Size = UDim2.new(0.83, 0, 1, 0)
	coinsLabel.BackgroundTransparency = 1
	coinsLabel.Font = Enum.Font.GothamBlack
	coinsLabel.Text = "COINS: Loading..."
	coinsLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
	coinsLabel.TextScaled = true
	coinsLabel.TextXAlignment = Enum.TextXAlignment.Left
	coinsLabel.TextYAlignment = Enum.TextYAlignment.Center
	coinsLabel.TextStrokeTransparency = 0.7
	coinsLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

	local coinsLabelSize = Instance.new("UITextSizeConstraint", coinsLabel)
	coinsLabelSize.MaxTextSize = isMobile and 24 or 42
	coinsLabelSize.MinTextSize = 14

	-- Items Container (responsive grid)
	local itemsFrame = Instance.new("Frame", mainFrame)
	itemsFrame.Position = UDim2.new(0.02, 0, 0.31, 0)
	itemsFrame.Size = UDim2.new(0.96, 0, 0.35, 0)
	itemsFrame.BackgroundColor3 = Color3.fromRGB(25, 35, 50)
	itemsFrame.BorderSizePixel = 0

	local itemsCorner = Instance.new("UICorner")
	itemsCorner.CornerRadius = UDim.new(0.02, 0)
	itemsCorner.Parent = itemsFrame

	local itemsStroke = Instance.new("UIStroke")
	itemsStroke.Color = Color3.fromRGB(0, 200, 255)
	itemsStroke.Thickness = math.max(2, ViewportSize.X * 0.003)
	itemsStroke.Parent = itemsFrame

	local itemsTitle = Instance.new("TextLabel", itemsFrame)
	itemsTitle.Position = UDim2.new(0, 0, 0, 0)
	itemsTitle.Size = UDim2.new(1, 0, 0.2, 0)
	itemsTitle.BackgroundTransparency = 1
	itemsTitle.Font = Enum.Font.GothamBlack
	itemsTitle.Text = "üì¶ INVENTORY ITEMS"
	itemsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	itemsTitle.TextScaled = true
	itemsTitle.TextStrokeTransparency = 0.5
	itemsTitle.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

	local itemsTitleSize = Instance.new("UITextSizeConstraint", itemsTitle)
	itemsTitleSize.MaxTextSize = isMobile and 20 or 32
	itemsTitleSize.MinTextSize = 12

	local itemsContainer = Instance.new("Frame", itemsFrame)
	itemsContainer.Position = UDim2.new(0.03, 0, 0.22, 0)
	itemsContainer.Size = UDim2.new(0.94, 0, 0.75, 0)
	itemsContainer.BackgroundTransparency = 1

	-- Grid layout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö mobile
	local itemsLayout
	if isMobile then
		itemsLayout = Instance.new("UIGridLayout", itemsContainer)
		itemsLayout.CellSize = UDim2.new(0.45, 0, 0.8, 0)
		itemsLayout.CellPadding = UDim2.new(0.02, 0, 0.1, 0)
		itemsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		itemsLayout.VerticalAlignment = Enum.VerticalAlignment.Top
	else
		itemsLayout = Instance.new("UIListLayout", itemsContainer)
		itemsLayout.FillDirection = Enum.FillDirection.Horizontal
		itemsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
		itemsLayout.VerticalAlignment = Enum.VerticalAlignment.Top
		itemsLayout.Padding = UDim.new(0.02, 0)
	end

	_G.FarmItemLabels = {}

	for _, name in ipairs(watchedItems) do
		local itemName = name:gsub("FoodModel", "")

		local itemBox = Instance.new("Frame", itemsContainer)
		if isMobile then
			itemBox.Size = UDim2.new(1, 0, 1, 0) -- Grid ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏≠‡∏á
		else
			itemBox.Size = UDim2.new(0.3, 0, 1, 0)
		end
		itemBox.BackgroundColor3 = Color3.fromRGB(40, 55, 75)
		itemBox.BorderSizePixel = 0

		local itemBoxCorner = Instance.new("UICorner")
		itemBoxCorner.CornerRadius = UDim.new(0.05, 0)
		itemBoxCorner.Parent = itemBox

		local itemBoxStroke = Instance.new("UIStroke")
		itemBoxStroke.Color = Color3.fromRGB(100, 255, 150)
		itemBoxStroke.Thickness = math.max(2, ViewportSize.X * 0.002)
		itemBoxStroke.Parent = itemBox

		local itemLabel = Instance.new("TextLabel", itemBox)
		itemLabel.Position = UDim2.new(0, 0, 0.05, 0)
		itemLabel.Size = UDim2.new(1, 0, 0.4, 0)
		itemLabel.BackgroundTransparency = 1
		itemLabel.Font = Enum.Font.GothamBlack
		itemLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		itemLabel.Text = itemName
		itemLabel.TextScaled = true
		itemLabel.TextYAlignment = Enum.TextYAlignment.Center
		itemLabel.TextStrokeTransparency = 0.5
		itemLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

		local itemLabelSize = Instance.new("UITextSizeConstraint", itemLabel)
		itemLabelSize.MaxTextSize = isMobile and 16 or 24
		itemLabelSize.MinTextSize = 10

		local itemCount = Instance.new("TextLabel", itemBox)
		itemCount.Position = UDim2.new(0, 0, 0.45, 0)
		itemCount.Size = UDim2.new(1, 0, 0.5, 0)
		itemCount.BackgroundTransparency = 1
		itemCount.Font = Enum.Font.GothamBlack
		itemCount.TextColor3 = Color3.fromRGB(0, 255, 127)
		itemCount.Text = "0"
		itemCount.TextScaled = true
		itemCount.TextYAlignment = Enum.TextYAlignment.Center
		itemCount.TextStrokeTransparency = 0.3
		itemCount.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

		local itemCountSize = Instance.new("UITextSizeConstraint", itemCount)
		itemCountSize.MaxTextSize = isMobile and 24 or 48
		itemCountSize.MinTextSize = 12

		_G.FarmItemLabels[itemName] = itemCount
	end

	-- Time and Status Container (responsive)
	local statusFrame = Instance.new("Frame", mainFrame)
	statusFrame.Position = UDim2.new(0.02, 0, 0.68, 0)
	statusFrame.Size = UDim2.new(0.96, 0, 0.12, 0)
	statusFrame.BackgroundColor3 = Color3.fromRGB(25, 35, 50)
	statusFrame.BorderSizePixel = 0

	local statusCorner = Instance.new("UICorner")
	statusCorner.

	-- Button Functions
	local guiElements = {coinsFrame, itemsFrame, statusFrame, controlsFrame}
	local isMinimized = false

	toggleButton.MouseButton1Click:Connect(function()
		isFarming = not isFarming
		if isFarming then
			toggleButton.Text = "‚è∏Ô∏è STOP"
			toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 150)
			statusLabel.Text = "üü¢ ACTIVE"
			statusLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
		else
			toggleButton.Text = "‚ñ∂Ô∏è START"
			toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
			statusLabel.Text = "üî¥ STOPPED"
			statusLabel.TextColor3 = Color3.fromRGB(255, 85, 85)
		end
	end)

	renderButton.MouseButton1Click:Connect(function()
		setRenderingEnabled(not renderingEnabled)
		if renderingEnabled then
			renderButton.Text = "üé® 3D OFF"
			renderButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
		else
			renderButton.Text = "üé® 3D ON"
			renderButton.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
		end
	end)

	minimizeButton.MouseButton1Click:Connect(function()
		isMinimized = not isMinimized
		for _, element in ipairs(guiElements) do
			element.Visible = not isMinimized
		end
		if isMinimized then
			mainFrame.Size = UDim2.new(1, 0, 0, 100)
			minimizeButton.Text = "EXPAND"
			minimizeButton.Size = UDim2.new(0, 120, 0, 50)
			minimizeButton.BackgroundColor3 = Color3.fromRGB(85, 170, 85)
		else
			mainFrame.Size = UDim2.new(1, 0, 1, 0)
			minimizeButton.Text = "HIDE"
			minimizeButton.Size = UDim2.new(0, 100, 0, 50)
			minimizeButton.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
		end
	end)

	-- Make draggable
	local UserInputService = game:GetService("UserInputService")
	local dragging = false
	local dragInput, dragStart, startPos

	titleBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	titleBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			local newPosition = UDim2.new(
				startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y
			)
			mainFrame.Position = newPosition
		end
	end)

	-- Update loop
	task.spawn(function()
		while true do
			local now = tick()
			local elapsed = now - farmStartTime
			timeLabel.Text = string.format("‚è±Ô∏è %02d:%02d", math.floor(elapsed / 60), math.floor(elapsed % 60))

			-- Update coins
			pcall(function()
				local coins = LocalPlayer.Data.Currency.Coins.Value
				coinsLabel.Text = string.format("COINS: %s", tostring(coins):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""))
			end)

			-- Update items
			local res = LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data:FindFirstChild("Resources")
			if res then
				for _, name in ipairs(watchedItems) do
					local itemName = name:gsub("FoodModel", "")
					local val = res:FindFirstChild(itemName)
					local label = _G.FarmItemLabels[itemName]
					if label and val then
						label.Text = tostring(val.Value)
					end
				end
			end
			task.wait(1)
		end
	end)
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
local function teleportToPosition(pos)
    local root = Character:FindFirstChild("HumanoidRootPart")
    if root and pos then
        root.CFrame = CFrame.new(pos + Vector3.new(0, 5, 0))
        print("üõ´ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:", pos)
    end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function findFoodNode()
    local foodFolder = workspace:FindFirstChild("Interactions")
        and workspace.Interactions:FindFirstChild("Nodes")
        and workspace.Interactions.Nodes:FindFirstChild("Food")

    if not foodFolder then return nil end

    for _, node in ipairs(foodFolder:GetChildren()) do
        if node:IsA("Model") and node.Name == "LargeFoodNode" then
            local part = node:FindFirstChild("BillboardPart")
            local health = part and part:FindFirstChild("Health")
            if part and health and health.Value > 0 then
                return node, part
            end
        end
    end
    return nil
end

-- ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ç‡∏≤‡∏¢
local function sellEverythingInInventory()
	local res = LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data:FindFirstChild("Resources")
	if not res then return end
	local args = {}
	for _, item in ipairs(res:GetChildren()) do
		if item:IsA("NumberValue") and item.Value >= 200 then
			table.insert(args, {
				ItemName = item.Name,
				Amount = 10000
			})
		end
	end
	if #args > 0 then
		ReplicatedStorage.Remotes.SellItemRemote:FireServer(unpack(args))
		print("‚úÖ ‡∏Ç‡∏≤‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
	end
end

local function allWatchedItemsReachedTarget()
	local res = LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data:FindFirstChild("Resources")
	if not res then return false end
	for _, itemName in ipairs(watchedItems) do
		local cleanName = itemName:gsub("FoodModel", "")
		local val = res:FindFirstChild(cleanName)
		if not val or val.Value < 10000 then
			return false
		end
	end
	return true
end

local function checkAndSell()
	local res = LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data:FindFirstChild("Resources")
	if not res then return end
	local remoteTeleport = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("WorldTeleportRemote")

	if game.PlaceId == SELL_WORLD_ID then
		local sold = false
		for _, itemName in ipairs(watchedItems) do
			local cleanName = itemName:gsub("FoodModel", "")
			local val = res:FindFirstChild(cleanName)
			if val and val.Value >= 50 then
				ReplicatedStorage.Remotes.SellItemRemote:FireServer({
					ItemName = cleanName,
					Amount = 10000
				})
				sold = true
				task.wait(0.2)
			end
		end
		if sold then
			task.wait(1)
			print("‚úÖ ‡∏Ç‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à ‚Üí ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏•‡∏Å‡∏ü‡∏≤‡∏£‡πå‡∏°")
			local args = { FARM_WORLD_ID, {} }
			remoteTeleport:InvokeServer(unpack(args))
		end
	else
		if allWatchedItemsReachedTarget() then
			print("üõ´ ‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ñ‡∏∂‡∏á 200 ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÇ‡∏•‡∏Å‡∏Ç‡∏≤‡∏¢")
			local args = { SELL_WORLD_ID, {} }
			remoteTeleport:InvokeServer(unpack(args))
		end
	end
end

-- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏Å‡πÇ‡∏•‡∏Å
RunService.Stepped:Connect(function()
	local hrp = Character:FindFirstChild("HumanoidRootPart")
	if hrp and hrp.Position.Y < -100 then
		hrp.CFrame = CFrame.new(lastSafePosition)
	end
end)

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥
task.spawn(function()
	while true do
		pcall(checkAndSell)
		task.wait(1)
	end
end)

-- Anti-AFK
task.spawn(function()
	while true do
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
		print("üõ°Ô∏è Anti-AFK: ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏∏‡∏î")
		task.wait(180)
	end
end)

-- ‡∏ü‡∏≤‡∏£‡πå‡∏° LargeFoodNode
local function getRemote(name)
	for i = 1, 100 do
		local dragon = Character:FindFirstChild("Dragons") and Character.Dragons:FindFirstChild(tostring(i))
		if dragon and dragon:FindFirstChild("Remotes") then
			local remote = dragon.Remotes:FindFirstChild(name)
			if remote then return remote end
		end
	end
	return nil
end

local function getHealth(part)
	return part and part:FindFirstChild("Health")
end

local function teleportTo(part, offset)
	local root = Character:FindFirstChild("HumanoidRootPart")
	if root and part then
		root.CFrame = CFrame.new(part.Position - Vector3.new(0, offset or 0, 0))
	end
end

local function pullItemToPlayer()
	local root = Character:FindFirstChild("HumanoidRootPart")
	if not root then return end
	for _, source in ipairs({workspace, workspace:FindFirstChild("Camera")}) do
		for _, name in ipairs(targetNames) do
			local model = source and source:FindFirstChild(name)
			if model and model:IsA("Model") and model.PrimaryPart then
				model:SetPrimaryPartCFrame(CFrame.new(root.Position + Vector3.new(0, 1, 0)))
			end
		end
	end
end

local function distanceXZ(a, b)
	local dxz = Vector3.new(a.X, 0, a.Z) - Vector3.new(b.X, 0, b.Z)
	return dxz.Magnitude
end

local function attackTarget(part)
	local remote = getRemote("PlaySoundRemote")
	if not remote then return end

	local health = getHealth(part)
	if not health or health.Value <= 0 then return end

	local root = Character:FindFirstChild("HumanoidRootPart")
	local offset = MAX_UNDERGROUND_OFFSET

	-- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
	if distanceXZ(root.Position, part.Position) > HORIZONTAL_DISTANCE_THRESHOLD then
		teleportTo(part, TELEPORT_NEAR_TREE_OFFSET)
		task.wait(0.1)
	end

	local success = false
	while offset >= MIN_UNDERGROUND_OFFSET do
		teleportTo(part, offset)
		task.wait(0.1)

		local before = health.Value
		for _ = 1, 3 do
			remote:FireServer("Breath", "Destructibles", part)
			task.wait(0.05)
		end

		if health.Value < before then
			lastSafePosition = part.Position + Vector3.new(0, 10, 0)
			success = true
			break
		end
		offset -= 5
	end

	-- ‡∏¢‡∏¥‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ health ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô 0
	if success then
		while health.Value > 0 do
			for _ = 1, 3 do
				remote:FireServer("Breath", "Destructibles", part)
			end
			pullItemToPlayer()
			task.wait(0.05)
		end
	end

	-- ‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô
	teleportTo(part, MAX_UNDERGROUND_OFFSET)
end

-- Heartbeat: ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏´‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
print("[‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏° LargeFoodNode]")
local lastFarmCheck = 0

RunService.Heartbeat:Connect(function(dt)
    local now = tick()
    if now - lastFarmCheck >= 1 then
        lastFarmCheck = now
        if not isFarming then return end -- ‡∏ñ‡πâ‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°

        -- ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏ô‡∏à‡∏∏‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        local node, part = findFoodNode()

        if node and part then
            -- ‡πÄ‡∏à‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ ‚Üí ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
            print("[‡∏ü‡∏≤‡∏£‡πå‡∏°:", node:GetFullName(), "]")
            pcall(function() attackTarget(part) end)
            currentCheckIndex = 1 -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï index ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
        else
            -- ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ ‚Üí ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            if currentCheckIndex <= #checkPositions then
                teleportToPosition(checkPositions[currentCheckIndex])
                currentCheckIndex = currentCheckIndex + 1
            else
                currentCheckIndex = 1 -- ‡∏ß‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏£‡∏Å‡πÉ‡∏´‡∏°‡πà
            end
            task.wait(2) -- ‡∏£‡∏≠ 2 ‡∏ß‡∏¥ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡πÑ‡∏´‡∏°
        end
    end
end)

-- UI
createCombinedUI()
